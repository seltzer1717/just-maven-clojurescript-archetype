<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.foo.aws</groupId>
  <artifactId>foo-lambda</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <clojure.version>1.10.2</clojure.version>
    <clojurescript.version>1.10.879</clojurescript.version>
    <commons-codec.version>1.15</commons-codec.version>
    <core.async.version>1.5.640</core.async.version>
    <clojure.scripts.dir>.clojure/scripts</clojure.scripts.dir>
    <clojure.opts.dir>.clojure/opts</clojure.opts.dir>
    <clojurescript.source.dir>src/main/clojurescript</clojurescript.source.dir>
    <clojurescript.source.entrynamespace>com.foo.aws.core</clojurescript.source.entrynamespace>
    <clojurescript.source.testentry>com.foo.aws.test-suite</clojurescript.source.testentry>
    <clojurescript.source.output.dir>target/js</clojurescript.source.output.dir>
    <clojurescript.test.dir>src/test/clojurescript</clojurescript.test.dir>
    <clojurescript.test.output.dir>target/test-js</clojurescript.test.output.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojurescript</artifactId>
      <version>${clojurescript.version}</version>
      <exclusions>
        <!-- Excluding Clojure dependency and updating version below. -->
        <exclusion>
          <groupId>org.clojure</groupId>
          <artifactId>clojure</artifactId>
        </exclusion>
        <!-- Vulnerability in current Clojurescript with commons-codec version. Excluding and adding higher version below -->
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojure</artifactId>
      <version>${clojure.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <!-- Adding to support core.async node processing. -->
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>core.async</artifactId>
      <version>${core.async.version}</version>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>${basedir}/${clojurescript.source.dir}</sourceDirectory>
    <testSourceDirectory>${basedir}/${clojurescript.test.dir}</testSourceDirectory>
    <outputDirectory>${basedir}/${clojurescript.source.output.dir}</outputDirectory>
    <testOutputDirectory>${basedir}/${clojurescript.test.output.dir}</testOutputDirectory>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.0.0</version>
          <configuration>
            <mainClass>clojure.main</mainClass>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>clj</id>
            <configuration>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
              </additionalClasspathElements>
              <commandlineArgs>${clojure.args}</commandlineArgs>
            </configuration>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
          <execution>
            <id>cljs-repl</id>
            <configuration>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
              </additionalClasspathElements>
              <arguments>
                <argument>${clojure.scripts.dir}/cljs.clj</argument>
                <argument>--compile-opts</argument>
                <argument>${clojure.opts.dir}/compile_opts.edn</argument>
                <argument>--repl-opts</argument>
                <argument>${clojure.opts.dir}/repl_opts.edn</argument>
                <argument>--repl-env</argument>
                <argument>node</argument>
                <argument>--repl</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
          <execution>
            <?m2e ignore?>
            <id>cljs-compile</id>
            <phase>compile</phase>
            <configuration>
              <systemProperties>
                <systemProperty>
                  <key>maven.source.dir</key>
                  <value>${project.build.sourceDirectory}</value>
                </systemProperty>
              </systemProperties>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
                <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
                <additionalClasspathElement>${basedir}</additionalClasspathElement>
              </additionalClasspathElements>
              <arguments>
                <argument>${clojure.scripts.dir}/compile.clj</argument>
                <argument>--compile-opts</argument>
                <argument>${clojure.opts.dir}/compile_opts.edn</argument>
                <argument>--target</argument>
                <argument>node</argument>
                <argument>--compile</argument>
                <argument>${clojurescript.source.entrynamespace}</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
          <execution>
            <?m2e ignore?>
            <id>cljs-test-compile</id>
            <phase>compile</phase>
            <configuration>
              <systemProperties>
                <systemProperty>
                  <key>maven.source.dir</key>
                  <value>${project.build.sourceDirectory}</value>
                </systemProperty>
              </systemProperties>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
                <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
                <additionalClasspathElement>${basedir}</additionalClasspathElement>
              </additionalClasspathElements>
              <arguments>
                <argument>${clojure.scripts.dir}/cljs.clj</argument>
                <argument>--compile-opts</argument>
                <argument>${clojure.opts.dir}/compile_test_opts.edn</argument>
                <argument>--target</argument>
                <argument>node</argument>
                <argument>--compile</argument>
                <argument>${clojurescript.source.testentry}</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
          <execution>
            <?m2e ignore?>
            <id>cljs-test</id>
            <phase>test</phase>
            <configuration>
              <systemProperties>
                <systemProperty>
                  <key>maven.source.dir</key>
                  <value>${project.build.sourceDirectory}</value>
                </systemProperty>
              </systemProperties>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
                <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
                <additionalClasspathElement>${basedir}</additionalClasspathElement>
              </additionalClasspathElements>
              <arguments>
                <argument>${clojure.scripts.dir}/cljs.clj</argument>
                <argument>--compile-opts</argument>
                <argument>${clojure.opts.dir}/compile_test_opts.edn</argument>
                <argument>--target</argument>
                <argument>node</argument>
                <argument>--main</argument>
                <argument>${clojurescript.source.testentry}</argument>
                <argument>foo</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>assemble-all</id>
            <configuration>
              <descriptors>
                 <descriptor>src/assembly/reportEvent.xml</descriptor>
                 <descriptor>src/assembly/dependencies.xml</descriptor>
               </descriptors>
             </configuration>
          </execution>
          <execution>
            <id>assemble-app</id>
            <phase>package</phase>
            <configuration>
              <descriptors>
                 <descriptor>src/assembly/reportEvent.xml</descriptor>
               </descriptors>
             </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
